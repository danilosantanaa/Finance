@page "/categoria/new"
@page "/categoria/edit/{id:int}"
@inject CategoriaService CategoriaService
@inject SweetAlert SweetAlert
@inject NavigationManager NavigationManager


<PageUpsert Title="Categoria" Model="Categoria" LinkPageIndex="./categoria" @ref="PageUpsert">

    <Form Model="Categoria" OnValidSubmit="Save" OnInvalidSubmit="StateHasChanged" Context="context">
        <DataAnnotationsValidator />

        <SectionForm>
            <SectionTitle Title="Dados"></SectionTitle>

            <div class="col-md-4">
                <InputTextCustom @bind-Value="Categoria.Descricao" Validation="() => Categoria.Descricao" class="form-control mb-2" />
            </div>

            <InputSwitch Label="@Categoria.Status.EnabledOrDisabled()" @bind-Value="Categoria.Status" />

        </SectionForm>

        <ButtonForm IsNew="Id.IsNew()" DisabledSubmitButton="false" URL_Create_New="./categoria/new" Reload="LoadCategoria" />
    </Form>

</PageUpsert>

@code {
    [Parameter]
    public int Id { get; set; }

    public Categoria Categoria { get; set; }
    PageUpsert<Categoria> PageUpsert;

    protected async override Task OnInitializedAsync()
    {
        await LoadCategoria();
    }

    public async Task LoadCategoria(bool is_reload_new = false)
    {
        Categoria = Id.IsNew() || is_reload_new ? new() : await CategoriaService.GetById(Id);


        PageUpsert?.ChangeStatusColor(Categoria.Status);
        if (Id.IsNew() || is_reload_new) {
            PageUpsert?.HiddenStatusColor();
        }

        StateHasChanged();
    }

    public async Task Save()
    {
        try {
            var result = Id.IsNew() ?
                await CategoriaService.Post(Categoria) :
                await CategoriaService.Put(Categoria, Id);

            if (!result.IsSuccessStatusCode)
                throw new Exception(result.ReasonPhrase);

            Id = !Id.IsNew() ? Id : result.Content.GetItem<Banco>().Id;

            await SweetAlert.ToastAsync(SweetAlertType.Success, Id.IsNew() ? "Registro salvo com sucesso!" : "Registro atualizado com sucesso!");

            NavigationManager.NavigateTo($"./categoria/edit/{Id}");

            await LoadCategoria();

        }
        catch (Exception e) {
            await SweetAlert.ToastAsync(SweetAlertType.Error, "Erro: " + e.Message);
        }
    }

    #region STATUS COLOR
    bool statusColor;
    public bool StatusColor => Categoria.Status;
    #endregion
}

